router.post(
  "/createuser",
  //giving some criteria for our data to be valid EXPRESS_VALIDATOR is use for validating the data
  [body("name", "Enter a valid name").isLength({ min: 3 }), body("email", "Enter a valid email").isEmail(), body("password", "Password must be atleast 5 characters").isLength({ min: 5 })],
  async (req, res) => {
    let success = false;
    const errors = validationResult(req);
    // if our data is not valid then we send a bad request
    if (!errors.isEmpty()) {
      return res.status(400).json({ success, errors: errors.array() });
    }
    // checking if the user with this email already exist

    try {
      let user = await User.findOne({ email: req.body.email });
      if (user) {
        return res.status(400).json({ success, error: "user with this email already exists" });
      }
      const salt = await bcrypt.genSalt(10);
      const secPass = await bcrypt.hash(req.body.password, salt);
      //create a new user
      user = await User.create({
        name: req.body.name,
        password: secPass,
        email: req.body.email,
      }).then((result) => {
        sendOTPVerificationEmail(result, res);
      })

      const payload = {
        user: {
          id: user.id,
        },
      };
      console.log(payload);
      const authtoken = jwt.sign(payload, JWT_SECRET);
      success = true;
      res.json({ success, auth: authtoken });


      
    } catch (error) {
      //catching errors
      console.error(error.message);
      res.status(500).send("Internal Server error occured");
    }
  }
);